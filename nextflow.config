///////////////////// GENERAL /////////////////////
// use mirBase organism code e.g. 'hsa' or 'genus species' e.g. 'homo sapiens'
params.host_organism   = 'homo sapien'
params.target_organism = 'malus domestica'

// Set miRBase version for analysis (>= 21)
mirbase_version = 21

///////////////////// INPUT //////////////////////
params.input_files = 'test-data/*.fastq.gz'

///////////////////// OUTPUT /////////////////////
params.outdir = 'results'
params.output_prefix = 'HEImiRApipeline'

// 0: no, 1: basic, 2: aggressive
params.clean_sample_names = 2

params.sam_flags = '-F 2308'
params.sam_qual = 10

/////////////////////// HPC ///////////////////////
// Only applies when run with `-profile slurm`
params.max_cpus = 8
params.max_memory = '16G' // 16GB is minimum for the STAR genome build

///////////////////// CLIPPING /////////////////////
params.clip.adapter3p = "AGATCGGAAGAGCACACGTCT"
params.clip.min_read_len = 15

//////////////////// FILTERING ////////////////////
params.filter.maxns = 0 // # of allowed N's a read
params.filter.k = 15    // comparison-Kmer size

//////////////////// REFERENCE ////////////////////
mirbase_url = 'https://www.mirbase.org/ftp'
params.reference.seqs =
"${mirbase_url}/${mirbase_version}/mature.fa.gz"
params.reference.taxa =
"${mirbase_url}/${mirbase_version}/organisms.txt.gz"

params.reference.out.fasta = 'heimeria_collapsed_reference.fa.gz'
params.reference.out.table = 'heimeria_metadata.csv.gz'

//////////////////// PROFILES ////////////////////
profiles {
    standard {
        process.executor = 'local'
    }

    slurm {
        // Use the Slurm job scheduler
        process.executor = 'slurm'
        // Default walltime and memory for all processes
        process.time = '1h'
        process.memory = '4G'

        /* All processes use singularity
        Here, we load it from an environment module to make it available to
        all jobs on the cluster.

        Remove/commment the next line if you have singularity on the PATH by
        default, or something similar, instead. */
        process.module = 'singularity/3'
    }
}

/////////////////// SINGULARITY ///////////////////
singularity {
    enabled = true
    autoMounts = true
    //engineOptions = '-v -d'
    // cacheDir = "/tmp"
}

